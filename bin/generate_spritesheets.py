# Uses ImageMagick (https://imagemagick.org/index.php) to generate SpriteSheets.

import os
import glob
import textwrap

from subprocess import PIPE, run


def out(command):
    result = run(command, stdout=PIPE, stderr=PIPE,
                 universal_newlines=True, shell=True)
    return result.stdout


IMAGES_PATH = 'public/images'
INDENT = 4 * ' '

# realm spritesheet

REALM_ICON_SUFFIX = '_realm_icon.png'
REALM_SPS_FNAME = 'realm_spritesheet.png'

os.system('magick {} +append {}'
          .format(os.path.join(IMAGES_PATH, '*' + REALM_ICON_SUFFIX), os.path.join(IMAGES_PATH, REALM_SPS_FNAME)))

realm_files = glob.glob(os.path.join(IMAGES_PATH, '*' + REALM_ICON_SUFFIX))
realm_image_w, realm_image_h = map(int, out('magick identify -format "%wx%h" {}'.format(
    realm_files[0])).split('x'))

realm_scss = ''

for i, realm in enumerate(realm_files):
    name = os.path.basename(realm)
    if name.endswith(REALM_ICON_SUFFIX):
        name = name[:-len(REALM_ICON_SUFFIX)]
        realm_scss += '\n&--{} {{ background-position: -{}px 0; }}'.format(
            name, realm_image_w * i)

realm_scss = '&__realm {{\n{}\n{}\n}}'.format(textwrap.indent(
    'background: url("{}") no-repeat;\nwidth: {}px;\nheight: {}px;'.format(IMAGES_PATH + '/' + REALM_SPS_FNAME, realm_image_w, realm_image_h), INDENT), textwrap.indent(realm_scss, INDENT))

# class spritesheet

CLASS_ICON_SUFFIX = '_class_icon.png'
CLASS_SPS_FNAME = 'class_spritesheet.png'
GRID_WIDTH, GRID_HEIGHT = 9, 5

os.system('magick montage -background none -mode concatenate -tile {}x{} {} {}'
          .format(GRID_WIDTH, GRID_HEIGHT, os.path.join(IMAGES_PATH, '*' + CLASS_ICON_SUFFIX), os.path.join(IMAGES_PATH, CLASS_SPS_FNAME)))

class_files = glob.glob(os.path.join(IMAGES_PATH, '*' + CLASS_ICON_SUFFIX))
class_image_w, class_image_h = map(int, out('magick identify -format "%wx%h" {}'.format(
    class_files[0])).split('x'))

class_scss = ''

for i, c in enumerate(class_files):
    name = os.path.basename(c)
    if name.endswith(CLASS_ICON_SUFFIX):
        name = name[:-len(CLASS_ICON_SUFFIX)]
        class_scss += '\n&--{} {{ background-position: -{}px -{}px; }}'.format(
            name, class_image_w * (i % GRID_WIDTH), class_image_h * (i % GRID_HEIGHT))

# generate scss file

class_scss = '&__class {{\n{}\n{}\n}}'.format(textwrap.indent(
    'background: url("{}") no-repeat;\nwidth: {}px;\nheight: {}px;'.format(IMAGES_PATH + '/' + CLASS_SPS_FNAME, class_image_w, class_image_h), INDENT), textwrap.indent(class_scss, INDENT))


comment = '//generated by https://github.com/mpunkenhofer/lisc/blob/main/bin/generate_spritesheets.py'
scss_data = '{}\n.sps {{\n{}\n\n{}\n\n{}\n}}'.format(comment, textwrap.indent('display: inline-block;', INDENT),
                                                     textwrap.indent(realm_scss, INDENT), textwrap.indent(class_scss, INDENT))

with open('src/common/_spritesheets.scss', "w") as scss:
    scss.write(scss_data)
